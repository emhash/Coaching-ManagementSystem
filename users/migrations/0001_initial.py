# Generated by Django 4.2.4 on 2023-10-05 16:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=354, unique=True, verbose_name='email_address')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher'), ('guardian', 'Guardian')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=50)),
                ('class_start', models.TimeField(blank=True, null=True)),
                ('class_end', models.TimeField(blank=True, null=True)),
                ('max_seat', models.IntegerField(default=35)),
                ('total_available_seats', models.IntegerField(blank=True, default=35, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreateExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=150)),
                ('out_of', models.IntegerField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_step_of_reg', models.BooleanField(default=False)),
                ('t_name', models.CharField(max_length=100)),
                ('profile_pic', models.ImageField(default='teacher.png', upload_to='teacher')),
                ('teacher_background', models.CharField(choices=[('science', 'science'), ('commerce', 'commerce'), ('arts', 'arts')], max_length=20)),
                ('t_present_adress', models.CharField(blank=True, max_length=150, null=True)),
                ('t_permnt_adress', models.CharField(blank=True, max_length=150, null=True)),
                ('t_extra_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('t_approval', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'ALL TEACHERS',
            },
        ),
        migrations.CreateModel(
            name='SubjectsPerClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_class', models.CharField(blank=True, choices=[('one', 'one'), ('two', 'two'), ('three', 'three'), ('four', 'four'), ('five', 'five'), ('six', 'six'), ('seven', 'seven'), ('eight', 'eight'), ('nine_science', 'nine_science'), ('nine_commerce', 'nine_commerce'), ('nine_arts', 'nine_arts'), ('ten_science', 'ten_science'), ('ten_commerce', 'ten_commerce'), ('ten_arts', 'ten_arts'), ('inter_first_year_science', 'inter_first_year_science'), ('inter_first_year_commerce', 'inter_first_year_commerce'), ('inter_first_year_arts', 'inter_first_year_arts'), ('inter_second_year_science', 'inter_second_year_science'), ('inter_second_year_commerce', 'inter_second_year_commerce'), ('inter_second_year_arts', 'inter_second_year_arts')], max_length=50, null=True)),
                ('subjects', models.ManyToManyField(to='users.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_step_of_reg', models.BooleanField(default=False)),
                ('choose_subjects', models.BooleanField(default=False)),
                ('s_approval', models.BooleanField(default=False)),
                ('guardian_phone_is_verified', models.BooleanField(default=False)),
                ('s_name', models.CharField(blank=True, max_length=170, null=True)),
                ('profile_pic', models.ImageField(default='avatar.png', upload_to='student')),
                ('s_id', models.IntegerField(blank=True, null=True)),
                ('guardian_phone', models.CharField(max_length=15)),
                ('your_subjects', multiselectfield.db.fields.MultiSelectField(blank=True, max_length=170, null=True)),
                ('s_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('guardian_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.batch')),
                ('class_subjects', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.subjectsperclass')),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.shift')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'ALL STUDENTS',
            },
        ),
        migrations.CreateModel(
            name='MarksOfStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField()),
                ('subject', models.CharField(max_length=150)),
                ('mark', models.IntegerField()),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.batch')),
                ('exam_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.createexam')),
                ('std', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.student')),
            ],
        ),
        migrations.CreateModel(
            name='MakeBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_class', models.TimeField(blank=True, null=True)),
                ('end_class', models.TimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.batch')),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.subjectsperclass')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.subjects')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_step_of_reg', models.BooleanField(default=False)),
                ('g_name', models.CharField(max_length=100)),
                ('present_adress', models.CharField(blank=True, max_length=150, null=True)),
                ('extra_phone_no', models.CharField(blank=True, max_length=50, null=True)),
                ('g_approval', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('children', models.ManyToManyField(to='users.student')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'ALL GUARDIANS',
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='shift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.shift'),
        ),
    ]
